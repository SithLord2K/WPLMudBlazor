@page "/player_standings"
@using WPLMudBlazor.Data.Services
@using WPLMudBlazor.Data.Models
@attribute [StreamRendering]

<PageTitle>Player Standings</PageTitle>

@if (pData != null)
{

    <DataGrid TItem="PDataModel"
              @ref="playerGrid"
              Data="@pData"
              PageSize="10"
              SortMode="DataGridSortMode.Single"
              Striped="true"
              Sortable="true"
              Bordered="true"
              ShowPager="true"
              Responsive="true"
              ResponsiveMode="@TableResponsiveMode.Mobile">
        <ChildContent>
            <DataGridCommandColumn TItem="PDataModel"></DataGridCommandColumn>
            <DataGridColumn TItem="PDataModel" Field="TeamName" Caption="Team" Sortable="true" Filterable FilterMethod="DataGridColumnFilterMethod.Equals" FixedPosition="TableColumnFixedPosition.Start" />
            <DataGridColumn TItem="PDataModel" Field="FirstName" Caption="First Name" Sortable="true" />
            <DataGridColumn TItem="PDataModel" Field="LastName" Caption="Last Name" Sortable="true" />
            <DataGridColumn TItem="PDataModel" Field="GamesPlayed" Caption="Games Played" Sortable="true" Filterable FilterMethod="DataGridColumnFilterMethod.Equals" />
            <DataGridColumn TItem="PDataModel" Field="GamesWon" Caption="Games Won" Sortable="true" />
            <DataGridColumn TItem="PDataModel" Field="GamesLost" Caption="Games Lost" Sortable="true" />
            <DataGridColumn TItem="PDataModel" Field="Average" DisplayFormat="{0:P2}" Caption="Average" Sortable="true" />
        </ChildContent>
        <EmptyTemplate>
            <div class="box">
                No Player Stats Found!
            </div>
        </EmptyTemplate>
    </DataGrid>

}

@code {
    [CascadingParameter]
    LoadingIndicator loadingIndicator { get; set; } = new();

    private readonly TeamHelper teamHelper;
    private readonly PlayerHelpers playerHelper;
    private readonly PDataService pDataService;

    private List<TeamStats> teamStats = new();
    private List<TeamDetail> teamDetails = [];
    private List<Players>? playerData = [];
    private List<PDataModel> pData = [];
    private PDataModel pDataModel = new();
    private DataGrid<PDataModel> playerGrid = new();
    private DataGrid<TeamStats> teamGrid = new();

    public PlayerStandings(TeamHelper teamHelper, PlayerHelpers playerHelpers, PDataService pDataService)
    {
        this.teamHelper = teamHelper;
        this.playerHelper = playerHelpers;
        this.pDataService = pDataService;
    }

    protected override async Task OnInitializedAsync()
    {
        await loadingIndicator.Show();
        teamDetails = await playerHelper.GetTeamDetails();
        playerData = await playerHelper.ConsolidatePlayer();
        teamStats = await teamHelper.GetAllTeamStats();
        pData = await pDataService.GetFullPlayerData();

        await playerGrid.ApplySorting(new DataGridSortColumnInfo(nameof(PDataModel.Average), SortDirection.Descending));
        await base.OnInitializedAsync();
        await loadingIndicator.Hide();
    }
}
