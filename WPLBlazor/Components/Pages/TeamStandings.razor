@page "/team_standings"
@using WPLMudBlazor.Components.Layout
@using WPLMudBlazor.Data.Models
@using WPLMudBlazor.Data.Services
@attribute [StreamRendering]

<PageTitle>Team Standings</PageTitle>

@if (teamStats != null)
{

    <DataGrid TItem="TeamStats"
              @ref="teamGrid"
              Data="@teamStats"
              PageSize="5"
              SortMode="DataGridSortMode.Single"
              Striped="true"
              Sortable="true"
              Bordered="true"
              ShowPager="true"
              Responsive="true"
              ResponsiveMode="@TableResponsiveMode.Mobile">
        <ChildContent>
            <DataGridCommandColumn TItem="TeamStats"></DataGridCommandColumn>
            <DataGridColumn TItem="TeamStats" Field="TeamName" Caption="Team Name" Sortable="true" />
            <DataGridColumn TItem="TeamStats" Field="TotalGamesPlayed" Caption="Total Games Played" Sortable="true" />
            <DataGridColumn TItem="TeamStats" Field="TotalGamesWon" Caption="Total Games Won" Sortable="true" />
            <DataGridColumn TItem="TeamStats" Field="TotalGamesLost" Caption="Total Games Lost" Sortable="true" />
            <DataGridColumn TItem="TeamStats" Field="WeeksWon" Caption="Weeks Won" Sortable="true" />
            <DataGridColumn TItem="TeamStats" Field="WeeksLost" Caption="Weeks Lost" Sortable="true" />
            <DataGridColumn TItem="TeamStats" Field="WeeksPlayed" Caption="Weeks Played" Sortable="true" />
            <DataGridColumn TItem="TeamStats" Field="TotalAverage" DisplayFormat="{0:P2}" Caption="Team Average" Sortable="true" />
        </ChildContent>
        <EmptyTemplate>
            <div class="box">
                No Team Stats found.
            </div>
        </EmptyTemplate>
    </DataGrid>

    <ScrollToTop />
}

@code {
    [CascadingParameter]
    LoadingIndicator loadingIndicator { get; set; } = new();

    private readonly TeamHelper teamHelper;
    private readonly PlayerHelpers playerHelper;
    private readonly PDataService pDataService;

    private List<TeamStats> teamStats = new();
    private List<TeamDetail> teamDetails = [];
    private List<Players>? playerData = [];
    private List<PDataModel> pData = [];
    private PDataModel pDataModel = new();
    private DataGrid<PDataModel> playerGrid = new();
    private DataGrid<TeamStats> teamGrid = new();

    public TeamStandings(PlayerHelpers playerHelpers, TeamHelper teamHelper, PDataService pDataService)
    {
        this.playerHelper = playerHelpers;
        this.teamHelper = teamHelper;
        this.pDataService = pDataService;
    }

    protected override async Task OnInitializedAsync()
    {
        await loadingIndicator.Show();
        teamDetails = await playerHelper.GetTeamDetails();
        playerData = await playerHelper.ConsolidatePlayer();
        teamStats = await teamHelper.GetAllTeamStats();
        pData = await pDataService.GetFullPlayerData();

        await teamGrid.ApplySorting(new DataGridSortColumnInfo(nameof(TeamStats.TotalAverage), SortDirection.Descending));
        await base.OnInitializedAsync();
        await loadingIndicator.Hide();
    }
}
